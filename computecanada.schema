# NAME: computecanada.schema
#
# DESCRIPTION: Compute Canada LDAP schema
#
# Version: 0.30
#
# AUTHOR: Lixin Liu <liu@computecanada.ca>
#
# Compute Canada PEN: 47174
#
# OID assignment:
#	1.3.6.1.4.1.47174.1		Compute Canada (cc)
#	1.3.6.1.4.1.47174.1.1		Directory Service (ccLDAP)
#	1.3.6.1.4.1.47174.1.1.1		Attribute Types
#	1.3.6.1.4.1.47174.1.1.1.1	cci
#	1.3.6.1.4.1.47174.1.1.1.2	ccri
#	1.3.6.1.4.1.47174.1.1.1.3	ccriPrimary
#	1.3.6.1.4.1.47174.1.1.1.4	ccStatus
#	1.3.6.1.4.1.47174.1.1.1.5	ccStatusUpdateTime
#	1.3.6.1.4.1.47174.1.1.1.6	ccCertSubject
#	1.3.6.1.4.1.47174.1.1.1.7	gcCertSubject
#	1.3.6.1.4.1.47174.1.1.1.8	ccServiceAccess
#	1.3.6.1.4.1.47174.1.1.1.9	rapi
#	1.3.6.1.4.1.47174.1.1.1.10	rapiType
#	1.3.6.1.4.1.47174.1.1.1.11	ccResource
#	1.3.6.1.4.1.47174.1.1.1.12	rapMember
# 	1.3.6.1.4.1.47174.1.1.1.13	ccAccountType
#
#	1.3.6.1.4.1.47174.1.1.2		Object Classes
#	1.3.6.1.4.1.47174.1.1.2.1	ccPerson
#	1.3.6.1.4.1.47174.1.1.2.2	ccAccount
#	1.3.6.1.4.1.47174.1.1.2.3	ccAllocation
#	1.3.6.1.4.1.47174.1.1.2.4	ccServiceAccount
#
# HISTORY:
#
# V0.30 March 5, 2016
#	- Change ComputeCanadaPerson and ComputeCanadaAccount to ccPerson
#	  and ccAccount
#	- Add ccAccountType attribute
#	- Change ccAtlasAccount to ccServiceAccount objectclass
#	- Use ccAccountType to specify account usage, like OpenStack, Atlas
#	- Change rapi, ccCertSubject and gcCertSubject to IA5 string type
#	- Change cci from MUST to May have attribute in ccPerson as we
#	  cureently use the employeeNumber to store CCI.
#
# V0.21 February 26, 2016
#	- Replace ccri in ccAllocation with rapMember
#	- Remove rapi from ccAtlasAccount since it appears in ccAllocation
#
# V0.20 February 24, 2016
#	- ccStatus and ccStatusUpdateTime should be available for all cases
#	  change to MUST
#	- ccri and rapi should be available and unique for ccAtlasAccount
#	  Atlas accounts always set to use PI's CCRI associated RAC RAPI
#
# V0.10 February 23, 2016
#	- Initial version
#

# Attribute Types
attributetype ( 1.3.6.1.4.1.47174.1.1.1.1 NAME 'cci'
	DESC 'Compute Canada Identity'
	EQUALITY caseExactIA5Match
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{32} SINGLE-VALUE )

attributetype ( 1.3.6.1.4.1.47174.1.1.1.2 NAME 'ccri'
	DESC 'Active Compute Canada Role Identity'
	EQUALITY caseExactIA5Match
	SUBSTR caseExactIA5SubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{32} )

attributetype ( 1.3.6.1.4.1.47174.1.1.1.3 NAME 'ccriPrimary'
	DESC 'Active Compute Canada Role Identity'
	EQUALITY caseExactIA5Match
	SUBSTR caseExactIA5SubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{32} SINGLE-VALUE )

attributetype ( 1.3.6.1.4.1.47174.1.1.1.4 NAME 'ccStatus'
	DESC 'Account status'
	EQUALITY caseIgnoreIA5Match
	SUBSTR caseExactIA5SubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{32} SINGLE-VALUE )

attributetype ( 1.3.6.1.4.1.47174.1.1.1.5 NAME 'ccStatusUpdateTime'
	DESC 'CC status last update time'
        EQUALITY generalizedTimeMatch
        ORDERING generalizedTimeOrderingMatch
        SYNTAX 1.3.6.1.4.1.1466.115.121.1.24 SINGLE-VALUE )

attributetype ( 1.3.6.1.4.1.47174.1.1.1.6 NAME 'ccCertSubject'
	DESC 'Subject of the certificate issued by Compute Canada CA'
	EQUALITY caseIgnoreIA5Match
	SUBSTR caseExactIA5SubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{256} )

attributetype ( 1.3.6.1.4.1.47174.1.1.1.7 NAME 'gcCertSubject'
	DESC 'Subject of the certificate issued by Grid Canada CA'
	EQUALITY caseIgnoreIA5Match
	SUBSTR caseExactIA5SubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{256} )

attributetype ( 1.3.6.1.4.1.47174.1.1.1.8 NAME 'ccServiceAccess'
	DESC 'A CC Service name which an entry can access'
	EQUALITY caseIgnoreMatch
	SUBSTR caseIgnoreSubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{32} )

attributetype ( 1.3.6.1.4.1.47174.1.1.1.9 NAME 'rapi'
	DESC 'Resource allocation project ID'
	EQUALITY caseIgnoreIA5Match
	SUBSTR caseExactIA5SubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{32} SINGLE-VALUE )

attributetype ( 1.3.6.1.4.1.47174.1.1.1.10 NAME 'rapiType'
	DESC 'Resource allocation project type: default, secondary or rac'
	EQUALITY caseIgnoreIA5Match
	SUBSTR caseExactIA5SubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{32} SINGLE-VALUE )

attributetype ( 1.3.6.1.4.1.47174.1.1.1.11 NAME 'ccResource'
	DESC 'Resource name, type and size in allocation'
	EQUALITY caseIgnoreMatch
	SUBSTR caseIgnoreSubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{32} )

attributetype ( 1.3.6.1.4.1.47174.1.1.1.12 NAME 'rapMember'
	DESC 'RAP members: use CCRI value for rapMember'
	EQUALITY caseExactIA5Match
	SUBSTR caseExactIA5SubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{32} )

attributetype ( 1.3.6.1.4.1.47174.1.1.1.13 NAME 'ccAccountType'
	DESC 'Type of Service of an account, e.g. Atlas, OpenStack'
	EQUALITY caseIgnoreMatch
	SUBSTR caseIgnoreSubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{32} )

# Object Classes
objectclass ( 1.3.6.1.4.1.47174.1.1.2.1 NAME 'ccPerson'
	DESC 'Attributes for Compute Canada users'
	SUP top AUXILIARY
	MAY ( cci ) )

objectclass ( 1.3.6.1.4.1.47174.1.1.2.2 NAME 'ccAccount'
	DESC 'Attributes for Compute Canada accounts'
	SUP top AUXILIARY
	MAY ( ccStatus $ ccStatusUpdateTime $ ccri $ ccriPrimary
	    $ ccCertSubject $ gcCertSubject $ ccServiceAccess) )

objectclass ( 1.3.6.1.4.1.47174.1.1.2.3 NAME 'ccAllocation'
	DESC 'Attributes for CC resource allocation projects'
	SUP top STRUCTURAL
	MUST ( rapi $ rapiType )
	MAY ( rapMember $ ccResource ) )

# Service accounts may or may not need RAPI depending ccAccountType.
# Some examples are:
# atlas: use only RAC RAPI wich matches its CCRI;
# snoplus: share dteam, ops and opsgm with altas, but uses different
#	   accounting group; also shows an account may blongs to more
#	   than one type;
# openstack: OpenStack service accounts do not need RAPI;
# canfar: use only RAC RAPI wich matches its CCRI;
# shared: shared accounts allow multiple users login to one account
#	  using certificates (avoid sharing the password);
objectclass ( 1.3.6.1.4.1.47174.1.1.2.4 NAME 'ccServiceAccount'
	DESC 'Compute Canada service and project accounts'
	SUP top AUXILIARY
	MAY ( ccStatus $ ccStatusUpdateTime $ ccAccountType $ ccri
	    $ ccriPrimary $ ccCertSubject $ gcCertSubject 
	    $ ccServiceAccess) )
